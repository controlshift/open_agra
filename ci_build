#!/bin/bash

# First argument is the tag name of a good build.
# For instance using Jenkins: $BUILD_NUMBER

if [ $# -ne 2 ]; then
  echo "Usage: ci2_build <build_number> <ruby_version>"
  echo "Example: ci2_build 1 1.9.3-p0"
  exit 1
fi
ruby_version=$2

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
if [ $? -ne 0 ]; then
  echo An error occur with rvm script
  exit 1
fi

# Installing ruby if it does not exist
echo checking ruby version $ruby_version
rvm use $ruby_version
if [ $? -ne 0 ]; then
  rvm install $ruby_version
  rvm use $ruby_version
fi

# Installing bundler if it does not exit
echo checking bundler
bundle -v
if [ $? -ne 0 ]; then
  gem install bundler
fi

# if there is any error, the script will terminate
set -e

export S3_ENABLED=true


workspace=$PWD
cd ..
rvm rvmrc untrust $workspace

cd $workspace

rvm use --create ruby-$ruby_version@agra

bundle check || bundle install --without staging production

bundle exec rake db:migrate

bundle exec rake spec external external_private integration scenarios

# tag the build
echo tagging the build...
build_number=$(printf %06d $1)
tag_name="goodbuild_$build_number"

git tag $tag_name

git push origin $tag_name

echo $tag_name > ../last_successful_build.tag
echo tagging $tag_name successful!
